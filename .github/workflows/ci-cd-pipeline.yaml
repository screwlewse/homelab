name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  HARBOR_REGISTRY: 10.0.0.88:30880
  HARBOR_PROJECT: k8s-devops
  KUBECONFIG_FILE: ${{ secrets.KUBECONFIG }}

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Harbor
      uses: docker/login-action@v3
      with:
        registry: ${{ env.HARBOR_REGISTRY }}
        username: admin
        password: ${{ secrets.HARBOR_PASSWORD }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/app
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./apps/backend/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run tests
      run: |
        echo "Running application tests..."
        # Add your test commands here
        # Example: npm test, pytest, etc.
        
    - name: Security scan
      run: |
        echo "Running security scans..."
        # Add security scanning tools like Trivy, OWASP ZAP, etc.

  deploy-dev:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'
        
    - name: Configure kubeconfig
      run: |
        echo "${{ env.KUBECONFIG_FILE }}" | base64 -d > kubeconfig
        export KUBECONFIG=./kubeconfig
        
    - name: Update image tag in GitOps repo
      run: |
        # This would typically update the image tag in your GitOps repository
        # For this demo, we'll show the concept
        NEW_TAG="${GITHUB_SHA::7}"
        echo "Would update image tag to: $NEW_TAG"
        
    - name: Trigger ArgoCD sync
      run: |
        echo "ArgoCD will automatically sync changes from GitOps repository"

  deploy-prod:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'
        
    - name: Configure kubeconfig
      run: |
        echo "${{ env.KUBECONFIG_FILE }}" | base64 -d > kubeconfig
        export KUBECONFIG=./kubeconfig
        
    - name: Deploy to production
      run: |
        NEW_TAG="${GITHUB_SHA::7}"
        echo "Deploying to production with tag: $NEW_TAG"
        # Update production manifests and trigger ArgoCD sync