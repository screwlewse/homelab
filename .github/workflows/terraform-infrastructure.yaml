name: Terraform Infrastructure

on:
  push:
    paths:
      - 'terraform/**'
    branches: [main, develop]
  pull_request:
    paths:
      - 'terraform/**'
    branches: [main]
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply
        - destroy

env:
  TF_VERSION: '1.6.0'
  KUBECONFIG_FILE: ${{ secrets.KUBECONFIG }}
  TF_VAR_harbor_admin_password: ${{ secrets.HARBOR_PASSWORD }}

jobs:
  terraform-validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        
    - name: Terraform Format Check
      run: |
        cd terraform
        terraform fmt -check -recursive
        
    - name: Terraform Init
      run: |
        cd terraform
        terraform init
        
    - name: Terraform Validate
      run: |
        cd terraform
        terraform validate
        
    - name: tfsec Security Scan
      uses: aquasecurity/tfsec-action@v1.0.0
      with:
        working_directory: terraform

  terraform-plan:
    runs-on: ubuntu-latest
    needs: terraform-validate
    if: github.event_name == 'pull_request' || github.event.inputs.action == 'plan'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        
    - name: Configure kubeconfig
      run: |
        mkdir -p ~/.kube
        echo "${{ env.KUBECONFIG_FILE }}" | base64 -d > ~/.kube/config
        
    - name: Create terraform.tfvars
      run: |
        cd terraform
        cat > terraform.tfvars << EOF
        cluster_name    = "k3s-devops-homelab"
        server_ip       = "10.0.0.88"
        kubeconfig_path = "~/.kube/config"
        
        metallb_ip_range = "10.0.0.200-10.0.0.210"
        
        nodeport_range = {
          traefik_http      = 30080
          traefik_https     = 30443
          traefik_dashboard = 30900
          harbor            = 30880
          argocd            = 30808
        }
        
        harbor_config = {
          admin_password = "${{ env.TF_VAR_harbor_admin_password }}"
          storage_size   = "5Gi"
        }
        
        argocd_config = {
          server_insecure = true
        }
        
        enable_components = {
          metallb      = true
          traefik      = true
          harbor       = true
          cert_manager = true
          argocd       = true
        }
        EOF
        
    - name: Terraform Init
      run: |
        cd terraform
        terraform init
        
    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan -out=tfplan
        
    - name: Upload Plan Artifact
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan
        path: terraform/tfplan
        retention-days: 5

  terraform-apply:
    runs-on: ubuntu-latest
    needs: terraform-validate
    if: |
      (github.ref == 'refs/heads/main' && github.event_name == 'push') ||
      github.event.inputs.action == 'apply'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        
    - name: Configure kubeconfig
      run: |
        mkdir -p ~/.kube
        echo "${{ env.KUBECONFIG_FILE }}" | base64 -d > ~/.kube/config
        
    - name: Create terraform.tfvars
      run: |
        cd terraform
        cat > terraform.tfvars << EOF
        cluster_name    = "k3s-devops-homelab"
        server_ip       = "10.0.0.88"
        kubeconfig_path = "~/.kube/config"
        
        metallb_ip_range = "10.0.0.200-10.0.0.210"
        
        nodeport_range = {
          traefik_http      = 30080
          traefik_https     = 30443
          traefik_dashboard = 30900
          harbor            = 30880
          argocd            = 30808
        }
        
        harbor_config = {
          admin_password = "${{ env.TF_VAR_harbor_admin_password }}"
          storage_size   = "5Gi"
        }
        
        argocd_config = {
          server_insecure = true
        }
        
        enable_components = {
          metallb      = true
          traefik      = true
          harbor       = true
          cert_manager = true
          argocd       = true
        }
        EOF
        
    - name: Terraform Init
      run: |
        cd terraform
        terraform init
        
    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve
        
    - name: Terraform Output
      run: |
        cd terraform
        terraform output -json > terraform-outputs.json
        
    - name: Upload Outputs
      uses: actions/upload-artifact@v4
      with:
        name: terraform-outputs
        path: terraform/terraform-outputs.json

  terraform-destroy:
    runs-on: ubuntu-latest
    needs: terraform-validate
    if: github.event.inputs.action == 'destroy'
    environment: destroy
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        
    - name: Configure kubeconfig
      run: |
        mkdir -p ~/.kube
        echo "${{ env.KUBECONFIG_FILE }}" | base64 -d > ~/.kube/config
        
    - name: Create terraform.tfvars
      run: |
        cd terraform
        cp terraform.tfvars.example terraform.tfvars
        sed -i 's/Harbor12345/${{ env.TF_VAR_harbor_admin_password }}/g' terraform.tfvars
        
    - name: Terraform Init
      run: |
        cd terraform
        terraform init
        
    - name: Terraform Destroy
      run: |
        cd terraform
        terraform destroy -auto-approve